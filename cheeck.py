for i in df['first_administrative_area_level'][:2]:
    simple = up.quote(i)
    url = url = 'https://api.teleport.org/api/cities/?search=' + simple
    params = {'embed' : 'city:search-results/city:item/city:urban_area/ua:scores'}
    page = requests.get(url,params=params)
    content = json.loads(page.text)
    result = content['_embedded']['city:search-results']
    if len(result) != 0:        
        for i in result[:1]:
            try:
                housing.append(i['_embedded']['city:item']['_embedded']['city:urban_area']['_embedded']['ua:scores']['categories'][0]['score_out_of_10'])
                cost_of_living.append(i['_embedded']['city:item']['_embedded']['city:urban_area']['_embedded']['ua:scores']['categories'][1]['score_out_of_10'])
                startups.append(i['_embedded']['city:item']['_embedded']['city:urban_area']['_embedded']['ua:scores']['categories'][2]['score_out_of_10'])
                venture_capital.append(i['_embedded']['city:item']['_embedded']['city:urban_area']['_embedded']['ua:scores']['categories'][3]['score_out_of_10'])
                travel_connectivity.append(i['_embedded']['city:item']['_embedded']['city:urban_area']['_embedded']['ua:scores']['categories'][4]['score_out_of_10'])
                commute.append(i['_embedded']['city:item']['_embedded']['city:urban_area']['_embedded']['ua:scores']['categories'][5]['score_out_of_10'])
                business_freedom.append(i['_embedded']['city:item']['_embedded']['city:urban_area']['_embedded']['ua:scores']['categories'][6]['score_out_of_10'])
                safety.append(i['_embedded']['city:item']['_embedded']['city:urban_area']['_embedded']['ua:scores']['categories'][7]['score_out_of_10'])
                healthcare.append(i['_embedded']['city:item']['_embedded']['city:urban_area']['_embedded']['ua:scores']['categories'][8]['score_out_of_10'])
                education.append(i['_embedded']['city:item']['_embedded']['city:urban_area']['_embedded']['ua:scores']['categories'][9]['score_out_of_10'])
                environment_quality(i['_embedded']['city:item']['_embedded']['city:urban_area']['_embedded']['ua:scores']['categories'][10]['score_out_of_10'])
                economy.append(i['_embedded']['city:item']['_embedded']['city:urban_area']['_embedded']['ua:scores']['categories'][11]['score_out_of_10'])
                taxation.append(i['_embedded']['city:item']['_embedded']['city:urban_area']['_embedded']['ua:scores']['categories'][12]['score_out_of_10'])
                internet_access.append(i['_embedded']['city:item']['_embedded']['city:urban_area']['_embedded']['ua:scores']['categories'][13]['score_out_of_10'])
                leisure_culture.append(i['_embedded']['city:item']['_embedded']['city:urban_area']['_embedded']['ua:scores']['categories'][14]['score_out_of_10'])
                tolerance.append(i['_embedded']['city:item']['_embedded']['city:urban_area']['_embedded']['ua:scores']['categories'][15]['score_out_of_10'])
                outdoors.append(i['_embedded']['city:item']['_embedded']['city:urban_area']['_embedded']['ua:scores']['categories'][16]['score_out_of_10'])
            except:
                housing.append(np.nan)
                cost_of_living.append(np.nan)
                startups.append(np.nan)
                venture_capital.append(np.nan)
                travel_connectivity.append(np.nan)
                commute.append(np.nan)
                business_freedom.append(np.nan)
                safety.append(np.nan)
                healthcare.append(np.nan)
                education.append(np.nan)
                environment_quality.append(np.nan)
                economy.append(np.nan)
                taxation.append(np.nan)
                internet_access.append(np.nan)
                leisure_culture.append(np.nan)
                tolerance.append(np.nan)
                outdoors.append(np.nan)
    else
        housing.append(np.nan)
        cost_of_living.append(np.nan)
        startups.append(np.nan)
        venture_capital.append(np.nan)
        travel_connectivity.append(np.nan)
        commute.append(np.nan)
        business_freedom.append(np.nan)
        safety.append(np.nan)
        healthcare.append(np.nan)
        education.append(np.nan)
        environment_quality.append(np.nan)
        economy.append(np.nan)
        taxation.append(np.nan)
        internet_access.append(np.nan)
        leisure_culture.append(np.nan)
        tolerance.append(np.nan)
        outdoors.append(np.nan)